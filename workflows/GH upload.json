{
  "active": true,
  "connections": {
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Globals1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status": {
      "main": [
        [
          {
            "node": "same",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different": {
      "main": [
        [
          {
            "node": "GitHub Edit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new": {
      "main": [
        [
          {
            "node": "GitHub Create",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime": {
      "main": [
        [
          {
            "node": "GitHub",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Every 12 hours": {
      "main": [
        [
          {
            "node": "Globals1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit": {
      "main": [
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub1": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "github_status1": {
      "main": [
        [
          {
            "node": "same1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "different1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "new1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "same1": {
      "main": [
        [
          {
            "node": "OneAtATime1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "different1": {
      "main": [
        [
          {
            "node": "GitHub Edit1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "new1": {
      "main": [
        [
          {
            "node": "GitHub Create1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OneAtATime1": {
      "main": [
        [
          {
            "node": "GitHub1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Globals1": {
      "main": [
        [
          {
            "node": "n8n1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "n8n1": {
      "main": [
        [
          {
            "node": "OneAtATime1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "isDiffOrNew1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Create1": {
      "main": [
        [
          {
            "node": "OneAtATime1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GitHub Edit1": {
      "main": [
        [
          {
            "node": "OneAtATime1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "github_status",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OneAtATime",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew1": {
      "main": [
        [
          {
            "node": "github_status1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "OneAtATime1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-08-23T08:53:08.318Z",
  "id": "uC8YyJD9QRfprBC6",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "GH upload",
  "nodes": [
    {
      "parameters": {},
      "id": "57517ee1-51ba-45af-b3b8-3cb89343b7f1",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -2985,
        415
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "c3ed1e61-c056-41ff-bdef-3186c5e65ebf",
      "name": "GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        -2140,
        380
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "4bCToCQwSKor9j9b",
          "name": "GaturaN"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "680c910a-6234-473d-89d9-5e43a035514e",
      "name": "github_status",
      "type": "n8n-nodes-base.switch",
      "position": [
        -1500,
        520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "18b87a09-b7bd-4eec-a6e4-16342026e25e",
      "name": "same",
      "type": "n8n-nodes-base.noOp",
      "position": [
        -1260,
        320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "3307696e-1c50-4b1c-b46f-5faae82343c5",
      "name": "different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        -1260,
        520
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "b3b1dae6-9ecf-479a-9f1c-4ccc241c3b01",
      "name": "new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        -1260,
        700
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "f59115de-9c89-4c48-9301-b9c074c9d502",
      "name": "OneAtATime",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -2360,
        540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "GaturaN"
            },
            {
              "name": "repo.name",
              "value": "n8n-bulkbox-backup"
            },
            {
              "name": "repo.path",
              "value": "workflows/"
            }
          ]
        },
        "options": {}
      },
      "id": "6fbfc74b-d0f4-4e37-b514-a2add84e123e",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -2800,
        540
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyX",
              "value": 12
            }
          ]
        }
      },
      "id": "7aeb4b48-cdcb-49f5-b0e9-5060c0fb0406",
      "name": "Every 12 hours",
      "type": "n8n-nodes-base.cron",
      "position": [
        -2985,
        675
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Workflow Backups\nThis workflow will automatically backup your workflows to your Github account every 12 hours.\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder to use within the repository, If it doesn't exist it will be created.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows",
        "height": 464.79920462713443,
        "width": 389.78906250000017
      },
      "id": "93e4109f-a5a8-4e93-a3ab-e44c9615070e",
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -3440,
        320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 755.2349999999991
      },
      "id": "f87d96e0-b107-4b5d-af14-089d6abd5032",
      "name": "Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2380,
        260
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "9b278295-34f4-4d09-b7e7-1ca0c6a80b17",
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1540,
        200
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "8dde9f10-b512-47c1-82ed-726c1dda8f60",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -2600,
        540
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "m9lkUOoNENYqXZIQ",
          "name": "Gatu a/c"
        }
      }
    },
    {
      "parameters": {},
      "id": "d7cc4bd6-c73e-48fc-9b3e-515cc5b4c5fa",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        -1920,
        520
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "file",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{ $json.n8n_data_stringy }}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "76fba4fa-33f3-4da8-99e1-666937a78580",
      "name": "GitHub Create",
      "type": "n8n-nodes-base.github",
      "position": [
        -1080,
        700
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "4bCToCQwSKor9j9b",
          "name": "GaturaN"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
        "fileContent": "={{ $json.n8n_data_stringy }}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "4daea24a-10ef-40e4-b367-09812a1ef76d",
      "name": "GitHub Edit",
      "type": "n8n-nodes-base.github",
      "position": [
        -1080,
        520
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "4bCToCQwSKor9j9b",
          "name": "GaturaN"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": "={{$node[\"Globals1\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals1\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals1\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "ee4cf804-9d64-4a39-b9a0-ad86d06a148a",
      "name": "GitHub1",
      "type": "n8n-nodes-base.github",
      "position": [
        -2100,
        1140
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "ccjyMRPIuUGjroFN",
          "name": "Bulkbox"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json[\"github_status\"]}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "e88c091e-97d7-4ec2-90d8-969007346836",
      "name": "github_status1",
      "type": "n8n-nodes-base.switch",
      "position": [
        -1460,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "de0d1a89-70cd-4880-a0be-bfcb55858f8b",
      "name": "same1",
      "type": "n8n-nodes-base.noOp",
      "position": [
        -1220,
        1080
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "d02388b0-3c63-45db-b7ad-aa3f848a61ea",
      "name": "different1",
      "type": "n8n-nodes-base.noOp",
      "position": [
        -1220,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "1a6e00a4-05d0-4e97-a1fd-d635b20294f1",
      "name": "new1",
      "type": "n8n-nodes-base.noOp",
      "position": [
        -1220,
        1460
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "batchSize": 1,
        "options": {}
      },
      "id": "7a631af6-ce25-433e-89db-5fa86f4cb6f5",
      "name": "OneAtATime1",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        -2320,
        1300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "repo.owner",
              "value": "gatura-bulkbox"
            },
            {
              "name": "repo.name",
              "value": "n8n-backup"
            },
            {
              "name": "repo.path",
              "value": "workflows/"
            }
          ]
        },
        "options": {}
      },
      "id": "de07490a-054f-4c66-85d7-4bd0ea7a0b0a",
      "name": "Globals1",
      "type": "n8n-nodes-base.set",
      "position": [
        -2760,
        1300
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
        "height": 424.04333333333386,
        "width": 755.2349999999991
      },
      "id": "fb8ac261-d290-452e-90e2-75ff7eff9510",
      "name": "Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -2340,
        1020
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
        "height": 693.9283333333326,
        "width": 666.4416666666662
      },
      "id": "78491922-ab85-4efc-83f0-1284bb3b594c",
      "name": "Note5",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1500,
        960
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "a6d3b74d-dcf8-447c-b8d5-f75812c94256",
      "name": "n8n1",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -2560,
        1300
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "m9lkUOoNENYqXZIQ",
          "name": "Gatu a/c"
        }
      }
    },
    {
      "parameters": {},
      "id": "d6d026a8-ef94-46e7-82b5-01d656bdbbac",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "position": [
        -1880,
        1280
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "resource": "file",
        "owner": "={{$node[\"Globals1\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals1\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals1\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime1\"].json[\"name\"]}}.json",
        "fileContent": "={{ $json.n8n_data_stringy }}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime1\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "e9dbd397-bff4-464c-94b4-13701956bf28",
      "name": "GitHub Create1",
      "type": "n8n-nodes-base.github",
      "position": [
        -1040,
        1460
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "ccjyMRPIuUGjroFN",
          "name": "Bulkbox"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": "={{$node[\"Globals1\"].json[\"repo\"][\"owner\"]}}",
        "repository": "={{$node[\"Globals1\"].json[\"repo\"][\"name\"]}}",
        "filePath": "={{$node[\"Globals1\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime1\"].json[\"name\"]}}.json",
        "fileContent": "={{ $json.n8n_data_stringy }}",
        "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime1\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
      },
      "id": "4f09b1bf-8201-4506-ab08-ef4c6db30c1e",
      "name": "GitHub Edit1",
      "type": "n8n-nodes-base.github",
      "position": [
        -1040,
        1280
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "ccjyMRPIuUGjroFN",
          "name": "Bulkbox"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "592fbded-a2de-4b26-9545-ade8aece280a",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        -1740,
        520
      ],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
      },
      "id": "c02bf1ab-2828-4c43-a68e-9def44141460",
      "name": "isDiffOrNew1",
      "type": "n8n-nodes-base.code",
      "position": [
        -1700,
        1280
      ],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-03-05T20:25:50.007Z",
      "updatedAt": "2024-03-05T20:25:50.007Z",
      "id": "Axa7tUwnaZFPBQmp",
      "name": "Production"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2024-09-29T15:14:14.000Z",
  "versionId": "9498151f-030e-43b8-9b7f-0b155404c506"
}